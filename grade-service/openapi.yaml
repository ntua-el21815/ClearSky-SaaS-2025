openapi: 3.0.3
info:
  title: Grade Service API
  version: 1.0.0
  description: API for uploading, validating, and retrieving course grades.

servers:
  - url: http://localhost:8500/gradeRoutes
    description: Local Grade Service

paths:
  /upload-initial:
    post:
      summary: Upload a grade Excel file
      operationId: uploadGrades
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - instructorId
                - institutionId
              properties:
                file:
                  type: string
                  format: binary
                final:
                  type: boolean
                instructorId:
                  type: string
                institutionId:
                  type: string
      responses:
        '200':
          description: Grades uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Invalid input or duplicate upload
        '500':
          description: Upload failed due to server error

  /:
    get:
      summary: Get grades for a course
      operationId: getGradesByCourse
      parameters:
        - in: query
          name: academicPeriod
          required: true
          schema:
            type: string
        - in: query
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: institutionId
          required: true
          schema:
            type: string
        - in: query
          name: final
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Course grades returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseGrades'
        '400':
          description: Missing required query parameters
        '404':
          description: Grades not found
        '500':
          description: Internal server error

  /student:
    get:
      summary: Get a student's grades by ID
      operationId: getStudentGradesById
      parameters:
        - in: query
          name: academicPeriod
          required: true
          schema:
            type: string
        - in: query
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: studentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Student grade returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGrade'
        '400':
          description: Missing required query parameters
        '404':
          description: Course or student not found
        '500':
          description: Internal server error

  /initial-courses:
    get:
      summary: Get initial-only course uploads for instructor
      operationId: getInitialCourses
      parameters:
        - in: query
          name: userCode
          required: true
          schema:
            type: string
          description: The instructor ID (userCode)
      responses:
        '200':
          description: Initial courses retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        courseId:
                          type: string
                        courseName:
                          type: string
                        academicPeriod:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
        '400':
          description: Missing userCode
        '500':
          description: Internal server error

  /course-status:
    get:
      summary: Get status of a course (Open/Closed)
      operationId: getCourseStatus
      parameters:
        - in: query
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: academicPeriod
          required: true
          schema:
            type: string
        - in: query
          name: institutionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course status
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: string
                    enum: [Open, Closed]
        '400':
          description: Missing required query parameters
        '404':
          description: Course not found
        '500':
          description: Internal server error

  /course-instructor:
    get:
      summary: Get the instructor ID of a course
      operationId: getCourseInstructor
      parameters:
        - in: query
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: institutionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Instructor ID returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  instructorId:
                    type: string
        '400':
          description: Missing required parameters
        '404':
          description: Course not found
        '500':
          description: Internal server error

components:
  schemas:
    UploadResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            metadata:
              type: object
              additionalProperties: true
            weights:
              type: object
              additionalProperties:
                type: number
            grades:
              type: array
              items:
                $ref: '#/components/schemas/GradeEntry'
            _id:
              type: string

    CourseGrades:
      type: object
      properties:
        academicPeriod:
          type: string
        courseId:
          type: string
        institutionId:
          type: string
        final:
          type: boolean
        grades:
          type: array
          items:
            $ref: '#/components/schemas/GradeEntry'

    StudentGrade:
      type: object
      properties:
        academicPeriod:
          type: string
        courseId:
          type: string
        final:
          type: boolean
        student:
          $ref: '#/components/schemas/GradeEntry'

    GradeEntry:
      type: object
      properties:
        studentId:
          type: string
        studentName:
          type: string
        academicalEmail:
          type: string
        grade:
          type: number
        responses:
          type: object
          additionalProperties:
            type: number
