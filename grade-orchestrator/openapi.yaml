openapi: 3.0.3
info:
  title: Grade Orchestrator API
  version: 1.0.0
  description: API gateway handling grade submissions, credit deductions, student performance data, and orchestration via messaging queues.

servers:
  - url: http://localhost:4000/api
    description: Local Grade Orchestrator Server

paths:
  /grade-submissions:
    post:
      summary: Upload a grade file for a course
      operationId: uploadGrades
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - userCode
                - institutionId
              properties:
                file:
                  type: string
                  format: binary
                  description: The Excel file containing the grades
                courseId:
                  type: string
                  description: Course identifier
                userCode:
                  type: string
                  description: Instructor or user code
                institutionId:
                  type: string
                  description: Institution identifier
                final:
                  type: boolean
                  description: Whether the upload is final (no credit deduction)
      responses:
        '200':
          description: Upload completed successfully
        '400':
          description: Missing parameters or insufficient credits
        '502':
          description: Downstream service or file processing failure

  /grades/by-course:
    get:
      summary: Retrieve grades by course
      operationId: getGradesByCourse
      parameters:
        - in: query
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: institutionId
          required: true
          schema:
            type: string
        - in: query
          name: academicPeriod
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Grades successfully fetched
        '400':
          description: Missing required query parameters
        '502':
          description: Failed to fetch grades from grade-service

  /grades/student:
    get:
      summary: Retrieve all grades for a student
      operationId: getGradesByStudent
      parameters:
        - in: query
          name: academicPeriod
          required: true
          schema:
            type: string
        - in: query
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: studentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Grades successfully fetched
        '400':
          description: Missing required parameters
        '502':
          description: Error retrieving grades

  /grades/initial-courses:
    get:
      summary: Get initial (non-final) uploaded courses for an instructor
      operationId: getInitialCourses
      parameters:
        - in: query
          name: instructorId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Initial courses retrieved
        '400':
          description: Missing instructorId
        '502':
          description: Downstream error retrieving data

  /grades/course-status:
    get:
      summary: Get course open/closed status
      operationId: getCourseStatus
      parameters:
        - in: query
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: academicPeriod
          required: true
          schema:
            type: string
        - in: query
          name: institutionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course status retrieved
        '400':
          description: Missing required parameters
        '502':
          description: Downstream error fetching course status

  /statistics/all:
    get:
      summary: Retrieve all aggregated statistics
      operationId: getAllStatistics
      responses:
        '200':
          description: All statistics returned
        '502':
          description: Failed to fetch statistics

  /statistics/course/{courseId}:
    get:
      summary: Retrieve statistics for a specific course
      operationId: getStatisticsByCourse
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: institutionId
          required: true
          schema:
            type: string
        - in: query
          name: academicPeriod
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course statistics retrieved
        '400':
          description: Missing query parameters
        '502':
          description: Error from statistics service

components:
  schemas: {}
