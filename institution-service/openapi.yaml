openapi: 3.0.3
info:
  title: Institution and Course Management API
  version: 1.0.0
  description: API for managing institutions and their courses.

servers:
  - url: http://localhost:8600/api
    description: Local development server

paths:
  /institutions:
    get:
      summary: Get all institutions
      operationId: getAllInstitutions
      responses:
        '200':
          description: List of institutions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
        '500':
          description: Internal server error
    post:
      summary: Create a new institution
      operationId: createInstitution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionInput'
      responses:
        '201':
          description: Institution created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '400':
          description: Bad request
        '409':
          description: Institution already exists

  /institutions/{id}:
    get:
      summary: Get an institution by ID
      operationId: getInstitution
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Institution details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '400':
          description: Bad request
        '404':
          description: Not found
    put:
      summary: Update an institution
      operationId: updateInstitution
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionInput'
      responses:
        '200':
          description: Institution updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '400':
          description: Bad request
        '404':
          description: Not found

  /institutions/{institutionId}/courses:
    get:
      summary: Get all courses for an institution
      operationId: getCoursesByInstitution
      parameters:
        - in: path
          name: institutionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '500':
          description: Internal server error
    post:
      summary: Create a new course in an institution
      operationId: createCourse
      parameters:
        - in: path
          name: institutionId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseInput'
      responses:
        '201':
          description: Course created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad request
        '409':
          description: Course already exists

  /courses/{courseId}:
    put:
      summary: Update a course
      operationId: updateCourse
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseUpdate'
      responses:
        '200':
          description: Course updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad request
        '404':
          description: Course not found
        '409':
          description: Duplicate course

components:
  schemas:
    Institution:
      type: object
      properties:
        _id:
          type: string
          description: Unique institution ID
        name:
          type: string
        location:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        _id: EKPA
        name: National and Kapodistrian University of Athens
        location: Athens, Greece
        createdAt: "2024-01-15T09:30:00Z"
        updatedAt: "2024-01-20T12:00:00Z"

    InstitutionInput:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Institution ID to be used as `_id`
        name:
          type: string
        location:
          type: string
      example:
        id: EKPA
        name: National and Kapodistrian University of Athens
        location: Athens

    Course:
      type: object
      properties:
        _id:
          type: string
        courseId:
          type: string
        courseName:
          type: string
        institutionId:
          type: string
        description:
          type: string
        academicPeriod:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        _id: "60ab1234cd56789ef0123456"
        courseId: CS101
        courseName: Introduction to Computer Science
        institutionId: EKPA
        description: Introductory programming and algorithms
        academicPeriod: 2024-Spring
        createdAt: "2024-01-10T08:00:00Z"
        updatedAt: "2024-01-15T10:00:00Z"

    CourseInput:
      type: object
      required:
        - courseId
      properties:
        courseId:
          type: string
        courseName:
          type: string
        description:
          type: string
        academicPeriod:
          type: string
      example:
        courseId: CS101
        courseName: Introduction to Computer Science
        description: Learn the fundamentals of computer science
        academicPeriod: 2024-Spring

    CourseUpdate:
      type: object
      properties:
        courseName:
          type: string
        description:
          type: string
        academicPeriod:
          type: string
      example:
        courseName: Computer Science I
        description: Updated description
        academicPeriod: 2024-Summer
